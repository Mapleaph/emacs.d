(defun wk-misc-custom-init ()
  (setq blink-cursor-delay 0)
  (setq blink-cursor-interval 0.4)
  (setq visible-bell t)
  (setq compilation-scroll-output t)
  (setq grep-scroll-output t)
  (setq scroll-preserve-screen-position 'always)
  (setq global-linum-mode t)
  (setq show-paren-mode t)
  (setq show-paren-style expression)
  (setq show-paren-style parenthesis)
  (setq indent-tabs-mode nil)
  (setq tab-width 4)
  (setq winner-mode t)
  (setq ring-bell-function #'ignore)
  (setq electric-pair-mode t)
  ;; (setq electric-pair-pairs '((?\" . ?\"))
  ;;	(?\{ . ?\}))

  (setq icomplete-mode t)
  (setq use-dialog-box nil)
  (setq mouse-wheel-progressive-speed t)
  (setq x-select-enable-clipboard t)
  (setq comint-prompt-read-only t)
  (setq auto-image-file-mode t)
  (setq display-time-24hr-format t)
  (setq mouse-avoidance-mode 'animate)
  (setq require-final-newline t)
  (setq parens-require-spaces nil)
  (setq kill-ring-max 1024)
  (setq view-read-only t)
  (setq comment-style multi-line)
  (setq auto-save-default nil)
  (setq make-backup-files nil)
  (setq read-file-name-completion-ignored-cas t)
  (setq frame-title-format '(" %f"))
  (setq user-mail-address "Mapleaph@me.com")
  (setq user-full-name "Michael Wu")
  (setq sentence-end "\\([。！？]\\|……\\|[.?!][]\"')}]*\\($\\|[ \t]\\)\\)[ \t\n]*")
  (setq scroll-margin 3 scroll-conservatively 10000)
  (autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
  (add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)
  (add-hook 'before-save-hook 'whitespace-cleanup)
  (delete 'Git vc-handled-backends)
  (ansi-color-for-comint-mode-on)
  (windmove-default-keybindings)
  (fset 'yes-or-no-p 'y-or-n-p))

(wk-misc-custom-init)


;; BEGIN: his-match-paren
(defun his-match-paren (&optional arg)
  "Go to the matching paren if on a paren; otherwise insert %."
  (interactive "p")
  (cond ((looking-at "\\s\(")
	 (forward-list 1)
	 (backward-char 1))
	((looking-at "\\s\)")
	 (forward-char 1)
	 (backward-list 1))
	(t (self-insert-command (or arg 1)))))

(global-set-key "%" 'his-match-paren)
;; END: his-match-paren


;; BEGIN: auto-indent-region when yank a piece of code
(dolist (command '(yank yank-pop))
  (eval
   `(defadvice ,command (after indent-region activate)
      (and (not current-prefix-arg)
	   (member major-mode
		   '(emacs-lisp-mode
		     lisp-mode
		     clojure-mode
		     scheme-mode
		     haskell-mode
		     ruby-mode
		     rspec-mode
		     python-mode
		     c-mode
		     c++-mode
		     objc-mode
		     latex-mode
		     js-mode
		     plain-tex-mode))
	   (let ((mark-even-if-inactive transient-mark-mode))
	     (indent-region (region-beginning) (region-end) nil))))))
;; END: auto-indent-region when yank a piece of code


;; BEGIN: toggle-line-spacing
(defun toggle-line-spacing ()
  "Toggle line spacing between no extra space to extra half line height."
  (interactive)
  (if (eq line-spacing nil)
      (setq-default line-spacing 0.5)
    (setq-default line-spacing nil)))
;; ENS: toggle-line-spacing

(provide 'init-editing-utils)
